plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url = 'https://jitpack.io' }
	maven { url 'https://maven.fabricmc.net/' }
	maven { url 'https://maven.architectury.dev/' }
	gradlePluginPortal()
}

loom {
    runs {
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagen"
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=tutorial-mod"
 
			runDir "build/datagen"
		}

		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.strict-validation"

			runDir "build/datagen"
		}
	}
}

//// Add the generated resources to the main source set
//sourceSets {
//	main {
//		resources {
//			srcDirs += [
//					'src/main/generated'
//			]
//		}
//	}
//}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
	shade
	implementation.extendsFrom shade
}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	shade 'com.google.guava:guava:32.1.1-jre'

	shade 'com.github.SNWCreations:Kookbc:0.27.2',{
		exclude group: 'net.fabricmc' , module: 'sponge-mixin'
		exclude group: 'com.google.guava:guava' , module: '32.1.1-jre'
	}
	shade 'cn.hutool:hutool-all:5.8.20'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}

	exclude 'META-INF/services/**'

}

shadowJar {
	archiveClassifier = ''
	configurations = [project.configurations.shade]
	relocate('snw.kookbc','net.flandre923.snw.kookbc')
}

assemble.dependsOn shadowJar


